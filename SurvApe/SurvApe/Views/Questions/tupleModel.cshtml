@using SurvApe.Models;
@model Tuple<List<CompletedSurvey>, List<Question>>
@{
    ViewBag.Title = "tupleModel";
}



@if (Model != null) {

    @Html.DisplayFor(item1 => item1.Item1)

    for (var i = 0; i < Model.Item2.Count; i++)
    {

            <table>
                <tr>
                    <td> @Html.Label((i + 1).ToString()) </td>
                </tr>
                <tr>
                    <td> @Html.DisplayFor(item => item.Item2[i].QuestionText) </td>
                </tr>
    @if (Model.Item2[i].Type == SurvApe.Models.QuestionType.TrueOrFalse)
                    {
        <tr>
            <td> @ViewBag.Percent[i]  <text>%</text></td>

        </tr>

    }
    @if (Model.Item2[i].Type == SurvApe.Models.QuestionType.MutipleChoice)
    {
            <tr>
                <td><text>Day</text> @ViewBag.aPercent[i]  <text>%</text></td>
            </tr>
            <tr>
                <td><text>Week</text> @ViewBag.bPercent[i]  <text>%</text></td>
            </tr>
            <tr>
                <td><text>Month</text> @ViewBag.cPercent[i]  <text>%</text></td>
            </tr>
            <tr>
                <td><text>Never</text> @ViewBag.dPercent[i]  <text>%</text></td>
            </tr>
    }
    @if (Model.Item2[i].Type == SurvApe.Models.QuestionType.Text)
    {
        <tr>
            <td>
                @foreach(CompletedSurvey c in @ViewBag.Text)
                {
                    
                    @c.AnswerGivenString<br />
                }
            </td>
        </tr>
       
    }
            </table>
        
    }
            @*@Html.DisplayFor(item1 => item1.Item1)*@
    foreach(CompletedSurvey cs in Model.Item1)
    { 
        <ol>
            <li>
                @*@cs.QuestionText*@
                @cs.AnswerGivenBool
                @cs.AnswerGivenString
                @*@ViewBag.Percent*@
            </li>          
        </ol>      
    }
}