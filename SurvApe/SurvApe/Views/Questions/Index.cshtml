@model IList<SurvApe.Models.Question>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>
@using (Html.BeginForm("Submit", "Questions"))
{

    for (var i = 0; i < Model.Count; i++)
    {
        <table>
            <tr>
                <td> @Html.Label((i + 1).ToString()) </td>
            </tr>




                @if (Model[i].Type == SurvApe.Models.QuestionType.TrueOrFalse)
                {
                    <tr>
                        <td>@Html.DisplayFor(item => item[i].QuestionText)  </td>
                    </tr>
                       <tr>
                        <td><text> True </text> @Html.RadioButtonFor(m => m[i].AnswerOptionBool, "true", new { value = true }) </td>  @*set to false, nullable...?*@
                        </tr>
                        <tr>
                            <td><text> False </text> @Html.RadioButtonFor(m => m[i].AnswerOptionBool, "false", new { value = false })</td>
                        </tr>

                        @*<b>True</b> @Html.CheckBoxFor(m => m[i].AnswerOptionBool)
                            <b>False</b> @Html.CheckBoxFor(m => m[i].AnswerOptionBool)*@
                        @Html.HiddenFor(x => x[i].ID)
                        @Html.HiddenFor(x => x[i].AnswerOptionBool)
                        @Html.HiddenFor(x => x[i].QuestionText)
                        @Html.HiddenFor(x => x[i].UserID)
                        @Html.HiddenFor(x => x[i].PollsterID)
                        @Html.HiddenFor(x => x[i].SurveyID)
                        @Html.HiddenFor(x => x[i].Type)


                    
                    }
                    @if (Model[i].Type == SurvApe.Models.QuestionType.Text)
                    {
            <tr>
                <td> @Html.DisplayFor(item => item[i].QuestionText)</td>
            </tr>
            <tr>
                <td> <text>Answer</text> @Html.TextBoxFor(m => m[i].AnswerOptionString, "AnswerOptionString")</td>  @*set to false, nullable...?*@                
            </tr>

                            @*<b>True</b> @Html.CheckBoxFor(m => m[i].AnswerOptionBool)
                                <b>False</b> @Html.CheckBoxFor(m => m[i].AnswerOptionBool)*@
                            @Html.HiddenFor(x => x[i].ID)
                            @Html.HiddenFor(x => x[i].AnswerOptionBool)
                            @Html.HiddenFor(x => x[i].QuestionText)
                            @Html.HiddenFor(x => x[i].UserID)
                            @Html.HiddenFor(x => x[i].PollsterID)
                            @Html.HiddenFor(x => x[i].SurveyID)
                            @Html.HiddenFor(x => x[i].Type)


                    }

                    @if (Model[i].Type == SurvApe.Models.QuestionType.MutipleChoice)
                    {
                        <tr>
                            <td>@Html.DisplayFor(item => item[i].QuestionText)</td>
                        </tr>
                        <tr>
                            <td><text>Day</text> @Html.RadioButtonFor(m => m[i].AnswerOptionString, "A") </td>
                        </tr>
                        <tr>
                            <td><text>Week</text> @Html.RadioButtonFor(m => m[i].AnswerOptionString, "B")</td>
                        </tr>
                        <tr>
                            <td> <text>Month</text> @Html.RadioButtonFor(m => m[i].AnswerOptionString, "C")</td>
                        </tr>
                        <tr>
                            <td> <text>Never</text> @Html.RadioButtonFor(m => m[i].AnswerOptionString, "D")</td>
                        </tr>

                        @Html.HiddenFor(x => x[i].ID)
                        @Html.HiddenFor(x => x[i].AnswerOptionBool)
                        @Html.HiddenFor(x => x[i].QuestionText)
                        @Html.HiddenFor(x => x[i].UserID)
                        @Html.HiddenFor(x => x[i].PollsterID)
                        @Html.HiddenFor(x => x[i].SurveyID)
                        @Html.HiddenFor(x => x[i].Type)
                        @Html.HiddenFor(x => x[i].AnswerOptionString)


                }
        </table>
    }
    <div>
        <input type="submit" value="Submit" />
    </div>

}

@*<table class="table">


    @foreach (var item in Model)
    {
        <tr>
            <td>

                @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ID })
            </td>
        </tr>
    }
    </table>*@
