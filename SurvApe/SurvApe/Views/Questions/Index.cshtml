@model IList<SurvApe.Models.Question>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>
@using (Html.BeginForm("Submit", "Questions"))
{

    for (var i = 0; i < Model.Count; i++)
    {
        if (Model[i].Type == SurvApe.Models.QuestionType.TrueOrFalse)
        {
        <ol>
            <li>
                @Html.DisplayFor(item => item[i].QuestionText)
           </li >
            <li>
                <b>True</b> @Html.RadioButtonFor(m => m[i].AnswerOptionBool, "true", new { value = true })  @*set to false, nullable...?*@
                <b>False</b> @Html.RadioButtonFor(m => m[i].AnswerOptionBool, "false", new { value = false })

                @*<b>True</b> @Html.CheckBoxFor(m => m[i].AnswerOptionBool)
                <b>False</b> @Html.CheckBoxFor(m => m[i].AnswerOptionBool)*@
                @Html.HiddenFor(x => x[i].ID)
                @Html.HiddenFor(x => x[i].AnswerOptionBool)
                @Html.HiddenFor(x => x[i].QuestionText)
                @Html.HiddenFor(x => x[i].UserID)
                @Html.HiddenFor(x => x[i].PollsterID)
                @Html.HiddenFor(x => x[i].SurveyID)
                @Html.HiddenFor(x => x[i].Type)


            </li>
        </ol>
        }
        if (Model[i].Type == SurvApe.Models.QuestionType.Text)
        {
            <ol>
                <li>
                    @Html.DisplayFor(item => item[i].QuestionText)
                </li>
                <li>
                    <b>Answer</b> @Html.TextBoxFor(m => m[i].AnswerOptionString, "AnswerOptionString")  @*set to false, nullable...?*@

                    @*<b>True</b> @Html.CheckBoxFor(m => m[i].AnswerOptionBool)
                        <b>False</b> @Html.CheckBoxFor(m => m[i].AnswerOptionBool)*@
                    @Html.HiddenFor(x => x[i].ID)
                    @Html.HiddenFor(x => x[i].AnswerOptionBool)
                    @Html.HiddenFor(x => x[i].QuestionText)
                    @Html.HiddenFor(x => x[i].UserID)
                    @Html.HiddenFor(x => x[i].PollsterID)
                    @Html.HiddenFor(x => x[i].SurveyID)
                    @Html.HiddenFor(x => x[i].Type)


                </li>
            </ol>
        }

        if (Model[i].Type == SurvApe.Models.QuestionType.MutipleChoice)
        {
        <ol>
            <li>
                @Html.DisplayFor(item => item[i].QuestionText)
            </li>
            <li>
                <b>Day</b> @Html.RadioButtonFor(m => m[i].AnswerOptionString, "A")  @*set to false, nullable...?*@
                <b>Week</b> @Html.RadioButtonFor(m => m[i].AnswerOptionString, "B")
                <b>Month</b> @Html.RadioButtonFor(m => m[i].AnswerOptionString, "C") 
                <b>Never</b> @Html.RadioButtonFor(m => m[i].AnswerOptionString, "D")

                @Html.HiddenFor(x => x[i].ID)
                @Html.HiddenFor(x => x[i].AnswerOptionBool)
                @Html.HiddenFor(x => x[i].QuestionText)
                @Html.HiddenFor(x => x[i].UserID)
                @Html.HiddenFor(x => x[i].PollsterID)
                @Html.HiddenFor(x => x[i].SurveyID)
                @Html.HiddenFor(x => x[i].Type)
                @Html.HiddenFor(x => x[i].AnswerOptionString)






            </li>
        </ol>
    }
}
    <div>
        <input type="submit" value="Submit" />
    </div>

}

    @*<table class="table">
      

        @foreach (var item in Model)
        {
            <tr>
                <td>
                  
                    @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                    @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                </td>
            </tr>
        }
        </table>*@
